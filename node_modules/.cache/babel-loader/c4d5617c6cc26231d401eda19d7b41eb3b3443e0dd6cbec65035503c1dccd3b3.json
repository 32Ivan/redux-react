{"ast":null,"code":"var _jsxFileName = \"/home/bug23/Desktop/Kompare/front/src/components/AddCustomer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport 'react-day-picker/dist/style.css';\nimport './CustomerForm.css';\nimport DatePicker from 'react-date-picker';\nimport { useAppDispatch, useAppSelector } from '../store/store';\nimport { fetchPrice } from '../store/features/priceSlice';\nimport { saveCustomer } from '../store/features/customerSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCustomer = props => {\n  _s();\n  const [name, setFirstName] = useState('');\n  const [surname, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [city, setCityName] = useState('other');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const {\n    onBackBtnClickHnd\n  } = props;\n  const priceCity = useAppSelector(state => state.price.price);\n  const dispatch = useAppDispatch();\n  const capitalizeWords = str => {\n    return str.toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const onSubmitBtnClickHnd = e => {\n    e.preventDefault();\n    dispatch(saveCustomer({\n      name,\n      surname,\n      city,\n      email,\n      dateOfBirth\n    }));\n    onBackBtnClickHnd();\n  };\n  const onChange = date => {\n    setDateOfBirth(date);\n  };\n  useEffect(() => {\n    dispatch(fetchPrice());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Customer Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitBtnClickHnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setFirstName(capitalizeWords(e.target.value)),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: surname,\n          onChange: e => setLastName(capitalizeWords(e.target.value)),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Add : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'select-city',\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label select-label\",\n          children: \"Example label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select\",\n          id: \"citi\",\n          value: city,\n          onChange: e => setCityName(e.target.value),\n          children: priceCity.map((c, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: 'dropdown',\n            value: c.city,\n            children: c.city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date Of Birth : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onChange: onChange,\n          value: dateOfBirth,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Back\",\n          onClick: onBackBtnClickHnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add ustomer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCustomer, \"FvCrhmtQBG027P5Plfmf4esKn2U=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = AddCustomer;\nexport default AddCustomer;\nvar _c;\n$RefreshReg$(_c, \"AddCustomer\");","map":{"version":3,"names":["useEffect","useState","DatePicker","useAppDispatch","useAppSelector","fetchPrice","saveCustomer","AddCustomer","props","name","setFirstName","surname","setLastName","email","setEmail","city","setCityName","dateOfBirth","setDateOfBirth","Date","onBackBtnClickHnd","priceCity","state","price","dispatch","capitalizeWords","str","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","onSubmitBtnClickHnd","e","preventDefault","onChange","date","target","value","c","index"],"sources":["/home/bug23/Desktop/Kompare/front/src/components/AddCustomer.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport 'react-day-picker/dist/style.css';\nimport './CustomerForm.css';\nimport DatePicker from 'react-date-picker';\nimport { useAppDispatch, useAppSelector } from '../store/store';\nimport { fetchPrice } from '../store/features/priceSlice';\nimport { saveCustomer } from '../store/features/customerSlice';\n\ntype Props = {\n    onBackBtnClickHnd: () => void;\n};\n\nconst AddCustomer = (props: Props) => {\n    const [name, setFirstName] = useState('');\n    const [surname, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [city, setCityName] = useState('other');\n    const [dateOfBirth, setDateOfBirth] = useState(new Date());\n    const { onBackBtnClickHnd } = props;\n\n    const priceCity = useAppSelector((state) => state.price.price);\n\n    const dispatch = useAppDispatch();\n\n    const capitalizeWords = (str: string) => {\n        return str\n            .toLowerCase()\n            .split(' ')\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n    const onSubmitBtnClickHnd = (e: any) => {\n        e.preventDefault();\n        dispatch(saveCustomer({ name, surname, city, email, dateOfBirth }));\n        onBackBtnClickHnd();\n    };\n\n    const onChange = (date: Date) => {\n        setDateOfBirth(date);\n    };\n\n    useEffect(() => {\n        dispatch(fetchPrice());\n    }, [dispatch]);\n\n    return (\n        <div className=\"form-container\">\n            <div>\n                <h3>Add Customer Form</h3>\n            </div>\n            <form onSubmit={onSubmitBtnClickHnd}>\n                <div>\n                    <label>First Name : </label>\n                    <input type=\"text\" value={name} onChange={(e) => setFirstName(capitalizeWords(e.target.value))} required />\n                </div>\n                <div>\n                    <label>Last Name : </label>\n                    <input type=\"text\" value={surname} onChange={(e) => setLastName(capitalizeWords(e.target.value))} required />\n                </div>\n                <div>\n                    <label>Email Add : </label>\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                </div>\n                <div className={'select-city'}>\n                    <label className=\"form-label select-label\">Example label</label>\n                    <select className=\"select\" id=\"citi\" value={city} onChange={(e) => setCityName(e.target.value)}>\n                        {priceCity.map((c, index) => (\n                            <option className={'dropdown'} value={c.city} key={index}>\n                                {c.city}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label>Date Of Birth : </label>\n                    <DatePicker onChange={onChange} value={dateOfBirth} required />\n                </div>\n                <div>\n                    <input type=\"button\" value=\"Back\" onClick={onBackBtnClickHnd} />\n                    <input type=\"submit\" value=\"Add ustomer\" />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AddCustomer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}