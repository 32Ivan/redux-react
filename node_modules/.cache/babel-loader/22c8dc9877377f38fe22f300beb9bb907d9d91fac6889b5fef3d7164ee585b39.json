{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  price: []\n};\nexport const fetchPrice = createAsyncThunk('customers/get', async thunkAPI => {\n  const response = await fetch('http://localhost:1066/price/get');\n  const data = await response.json();\n  return data.price;\n});\nexport const PriceSlice = createSlice({\n  name: 'price',\n  initialState,\n  reducers: {\n    addPrice: (state, action) => {\n      state.price.push({\n        amount: action.payload.amount,\n        city: action.payload.city\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPrice.fulfilled, (state, action) => {\n      state.price = action.payload;\n    });\n  }\n});\nexport default PriceSlice.reducer;\nexport const {\n  addPrice\n} = PriceSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","price","fetchPrice","thunkAPI","response","fetch","data","json","PriceSlice","name","reducers","addPrice","state","action","push","amount","payload","city","extraReducers","builder","addCase","fulfilled","reducer","actions"],"sources":["/home/bug23/Desktop/Kompare/front/src/store/features/priceSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IPrice } from '../../components/CustomerType';\n\ninterface PriceState {\n    price: IPrice[];\n}\n\nconst initialState: PriceState = {\n    price: []\n};\n\nexport const fetchPrice = createAsyncThunk('customers/get', async (thunkAPI) => {\n    const response = await fetch('http://localhost:1066/price/get');\n    const data = await response.json();\n\n    return data.price;\n});\n\nexport const PriceSlice = createSlice({\n    name: 'price',\n    initialState,\n    reducers: {\n        addPrice: (state, action: PayloadAction<{ amount: number; city: string }>) => {\n            state.price.push({\n                amount: action.payload.amount,\n                city: action.payload.city\n            });\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchPrice.fulfilled, (state, action) => {\n            state.price = action.payload;\n        });\n    }\n});\n\nexport default PriceSlice.reducer;\nexport const { addPrice } = PriceSlice.actions;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAO/E,MAAMC,YAAwB,GAAG;EAC7BC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC,eAAe,EAAE,MAAOK,QAAQ,IAAK;EAC5E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAElC,OAAOD,IAAI,CAACL,KAAK;AACrB,CAAC,CAAC;AAEF,OAAO,MAAMO,UAAU,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACNC,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAuD,KAAK;MAC1ED,KAAK,CAACX,KAAK,CAACa,IAAI,CAAC;QACbC,MAAM,EAAEF,MAAM,CAACG,OAAO,CAACD,MAAM;QAC7BE,IAAI,EAAEJ,MAAM,CAACG,OAAO,CAACC;MACzB,CAAC,CAAC;IACN;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,UAAU,CAACmB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACG,OAAO;IAChC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeR,UAAU,CAACc,OAAO;AACjC,OAAO,MAAM;EAAEX;AAAS,CAAC,GAAGH,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}